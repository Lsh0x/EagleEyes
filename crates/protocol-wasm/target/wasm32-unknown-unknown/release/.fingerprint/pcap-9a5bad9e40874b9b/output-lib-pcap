{"$message_type":"diagnostic","message":"failed to resolve: could not find `unix` in `os`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1947,"byte_end":1951,"line_start":60,"line_end":60,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"use std::os::unix::io::{AsRawFd, RawFd};","highlight_start":14,"highlight_end":18}],"label":"could not find `unix` in `os`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"found an item that was configured out","code":null,"level":"note","spans":[{"file_name":"/Users/lsh/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/os/mod.rs","byte_start":1069,"byte_end":1072,"line_start":29,"line_end":29,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"    doc,","highlight_start":5,"highlight_end":8}],"label":"the item is gated here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/os/mod.rs","byte_start":1278,"byte_end":1282,"line_start":36,"line_end":36,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"pub mod unix {}","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"found an item that was configured out","code":null,"level":"note","spans":[{"file_name":"/Users/lsh/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/os/mod.rs","byte_start":2436,"byte_end":2447,"line_start":84,"line_end":84,"column_start":41,"column_end":52,"is_primary":false,"text":[{"text":"#[cfg(all(not(target_os = \"hermit\"), any(unix, doc)))]","highlight_start":41,"highlight_end":52}],"label":"the item is gated here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/os/mod.rs","byte_start":2459,"byte_end":2463,"line_start":85,"line_end":85,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"pub mod unix;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `unix` in `os`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:60:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::unix::io::{AsRawFd, RawFd};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `unix` in `os`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: found an item that was configured out\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/os/mod.rs:36:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    doc,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe item is gated here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod unix {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: found an item that was configured out\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/os/mod.rs:85:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(not(target_os = \"hermit\"), any(unix, doc)))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe item is gated here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod unix;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `libc::c_char`, `libc::c_int`, `libc::c_uchar`, `libc::c_uint`, `libc::c_ushort`, `libc::sockaddr`, `libc::timeval`, `libc::FILE`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":65,"byte_end":71,"line_start":4,"line_end":4,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":12,"highlight_end":18}],"label":"no `c_char` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":73,"byte_end":78,"line_start":4,"line_end":4,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":20,"highlight_end":25}],"label":"no `c_int` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":80,"byte_end":87,"line_start":4,"line_end":4,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":27,"highlight_end":34}],"label":"no `c_uchar` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":89,"byte_end":95,"line_start":4,"line_end":4,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":36,"highlight_end":42}],"label":"no `c_uint` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":97,"byte_end":105,"line_start":4,"line_end":4,"column_start":44,"column_end":52,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":44,"highlight_end":52}],"label":"no `c_ushort` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":107,"byte_end":115,"line_start":4,"line_end":4,"column_start":54,"column_end":62,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":54,"highlight_end":62}],"label":"no `sockaddr` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":117,"byte_end":124,"line_start":4,"line_end":4,"column_start":64,"column_end":71,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":64,"highlight_end":71}],"label":"no `timeval` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs","byte_start":126,"byte_end":130,"line_start":4,"line_end":4,"column_start":73,"column_end":77,"is_primary":true,"text":[{"text":"use libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};","highlight_start":73,"highlight_end":77}],"label":"no `FILE` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these type aliases instead:\ncrate::ffi::c_char\nstd::ffi::c_char\nstd::os::raw::c_char\ncore::ffi::c_char","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these type aliases instead:\ncrate::ffi::c_int\nstd::ffi::c_int\nstd::os::raw::c_int\ncore::ffi::c_int","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these type aliases instead:\ncrate::ffi::c_uchar\nstd::ffi::c_uchar\nstd::os::raw::c_uchar\ncore::ffi::c_uchar","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these type aliases instead:\ncrate::ffi::c_uint\nstd::ffi::c_uint\nstd::os::raw::c_uint\ncore::ffi::c_uint","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these type aliases instead:\ncrate::ffi::c_ushort\nstd::ffi::c_ushort\nstd::os::raw::c_ushort\ncore::ffi::c_ushort","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `libc::c_char`, `libc::c_int`, `libc::c_uchar`, `libc::c_uint`, `libc::c_ushort`, `libc::sockaddr`, `libc::timeval`, `libc::FILE`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/raw.rs:4:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libc::{c_char, c_int, c_uchar, c_uint, c_ushort, sockaddr, timeval, FILE};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `FILE` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `timeval` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `sockaddr` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `c_ushort` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `c_uint` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `c_uchar` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `c_int` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `c_char` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases instead:\u001b[0m\n\u001b[0m          crate::ffi::c_char\u001b[0m\n\u001b[0m          std::ffi::c_char\u001b[0m\n\u001b[0m          std::os::raw::c_char\u001b[0m\n\u001b[0m          core::ffi::c_char\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases instead:\u001b[0m\n\u001b[0m          crate::ffi::c_int\u001b[0m\n\u001b[0m          std::ffi::c_int\u001b[0m\n\u001b[0m          std::os::raw::c_int\u001b[0m\n\u001b[0m          core::ffi::c_int\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases instead:\u001b[0m\n\u001b[0m          crate::ffi::c_uchar\u001b[0m\n\u001b[0m          std::ffi::c_uchar\u001b[0m\n\u001b[0m          std::os::raw::c_uchar\u001b[0m\n\u001b[0m          core::ffi::c_uchar\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases instead:\u001b[0m\n\u001b[0m          crate::ffi::c_uint\u001b[0m\n\u001b[0m          std::ffi::c_uint\u001b[0m\n\u001b[0m          std::os::raw::c_uint\u001b[0m\n\u001b[0m          core::ffi::c_uint\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases instead:\u001b[0m\n\u001b[0m          crate::ffi::c_ushort\u001b[0m\n\u001b[0m          std::ffi::c_ushort\u001b[0m\n\u001b[0m          std::os::raw::c_ushort\u001b[0m\n\u001b[0m          core::ffi::c_ushort\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `c_char` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":3143,"byte_end":3149,"line_start":104,"line_end":104,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"    unsafe fn new(ptr: *const libc::c_char) -> Error {","highlight_start":37,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these type aliases","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::os::raw::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `c_char`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":3137,"byte_end":3143,"line_start":104,"line_end":104,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"    unsafe fn new(ptr: *const libc::c_char) -> Error {","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `c_char` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:104:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe fn new(ptr: *const libc::c_char) -> Error {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::os::raw::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `c_char`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    unsafe fn new(ptr: *const \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mc_char) -> Error {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    unsafe fn new(ptr: *const c_char) -> Error {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `timeval` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":15623,"byte_end":15630,"line_start":447,"line_end":447,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"    pub ts: libc::timeval,","highlight_start":19,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `timeval` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:447:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub ts: libc::timeval,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `c_char` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":20999,"byte_end":21005,"line_start":601,"line_end":601,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"        F: FnOnce(*const libc::c_char, *mut libc::c_char) -> *mut raw::pcap_t,","highlight_start":32,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these type aliases","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::os::raw::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `c_char`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":20993,"byte_end":20999,"line_start":601,"line_end":601,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        F: FnOnce(*const libc::c_char, *mut libc::c_char) -> *mut raw::pcap_t,","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `c_char` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:601:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(*const libc::c_char, *mut libc::c_char) -> *mut raw::pcap_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::os::raw::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `c_char`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        F: FnOnce(*const \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mc_char, *mut libc::c_char) -> *mut raw::pcap_t,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        F: FnOnce(*const c_char, *mut libc::c_char) -> *mut raw::pcap_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `c_char` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":21018,"byte_end":21024,"line_start":601,"line_end":601,"column_start":51,"column_end":57,"is_primary":true,"text":[{"text":"        F: FnOnce(*const libc::c_char, *mut libc::c_char) -> *mut raw::pcap_t,","highlight_start":51,"highlight_end":57}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these type aliases","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::os::raw::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `c_char`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":21012,"byte_end":21018,"line_start":601,"line_end":601,"column_start":45,"column_end":51,"is_primary":true,"text":[{"text":"        F: FnOnce(*const libc::c_char, *mut libc::c_char) -> *mut raw::pcap_t,","highlight_start":45,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `c_char` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:601:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(*const libc::c_char, *mut libc::c_char) -> *mut raw::pcap_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::os::raw::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::ffi::c_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `c_char`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        F: FnOnce(*const libc::c_char, *mut \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mc_char) -> *mut raw::pcap_t,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        F: FnOnce(*const libc::c_char, *mut c_char) -> *mut raw::pcap_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `c_uchar` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":35490,"byte_end":35497,"line_start":954,"line_end":954,"column_start":42,"column_end":49,"is_primary":true,"text":[{"text":"            let mut packet: *const libc::c_uchar = ptr::null();","highlight_start":42,"highlight_end":49}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these type aliases","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::ffi::c_uchar;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::ffi::c_uchar;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::os::raw::c_uchar;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::ffi::c_uchar;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `c_uchar`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":35484,"byte_end":35490,"line_start":954,"line_end":954,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"            let mut packet: *const libc::c_uchar = ptr::null();","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `c_uchar` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:954:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m954\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut packet: *const libc::c_uchar = ptr::null();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::ffi::c_uchar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::ffi::c_uchar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::os::raw::c_uchar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::ffi::c_uchar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `c_uchar`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m954\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            let mut packet: *const \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mc_uchar = ptr::null();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m954\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            let mut packet: *const c_uchar = ptr::null();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `FILE` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":42403,"byte_end":42407,"line_start":1157,"line_end":1157,"column_start":69,"column_end":73,"is_primary":true,"text":[{"text":"pub unsafe fn open_raw_fd(fd: RawFd, mode: u8) -> Result<*mut libc::FILE, Error> {","highlight_start":69,"highlight_end":73}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `FILE` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:1157:69\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe fn open_raw_fd(fd: RawFd, mode: u8) -> Result<*mut libc::FILE, Error> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `fdopen` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":42458,"byte_end":42464,"line_start":1159,"line_end":1159,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    libc::fdopen(fd, mode.as_ptr() as _)","highlight_start":11,"highlight_end":17}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `fdopen` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:1159:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    libc::fdopen(fd, mode.as_ptr() as _)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `c_char` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":42617,"byte_end":42623,"line_start":1166,"line_end":1166,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"unsafe fn cstr_to_string(ptr: *const libc::c_char) -> Result<Option<String>, Error> {","highlight_start":44,"highlight_end":50}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these type aliases","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::os::raw::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `c_char`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":42611,"byte_end":42617,"line_start":1166,"line_end":1166,"column_start":38,"column_end":44,"is_primary":true,"text":[{"text":"unsafe fn cstr_to_string(ptr: *const libc::c_char) -> Result<Option<String>, Error> {","highlight_start":38,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `c_char` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:1166:44\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe fn cstr_to_string(ptr: *const libc::c_char) -> Result<Option<String>, Error> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::ffi::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::ffi::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::os::raw::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::ffi::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `c_char`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0munsafe fn cstr_to_string(ptr: *const \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mc_char) -> Result<Option<String>, Error> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0munsafe fn cstr_to_string(ptr: *const c_char) -> Result<Option<String>, Error> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `c_char` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":43243,"byte_end":43249,"line_start":1193,"line_end":1193,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    F: FnOnce(*mut libc::c_char) -> Result<T, Error>,","highlight_start":26,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these type aliases","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::os::raw::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":1703,"byte_end":1703,"line_start":49,"line_end":49,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use unique::Unique;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::ffi::c_char;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `c_char`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":43237,"byte_end":43243,"line_start":1193,"line_end":1193,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"    F: FnOnce(*mut libc::c_char) -> Result<T, Error>,","highlight_start":20,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `c_char` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:1193:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    F: FnOnce(*mut libc::c_char) -> Result<T, Error>,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these type aliases\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::ffi::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::ffi::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::os::raw::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::ffi::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `c_char`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    F: FnOnce(*mut \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mc_char) -> Result<T, Error>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    F: FnOnce(*mut c_char) -> Result<T, Error>,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `timeval` in crate `libc`","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":43759,"byte_end":43766,"line_start":1212,"line_end":1212,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"            ts: libc::timeval {","highlight_start":23,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `timeval` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:1212:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ts: libc::timeval {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `malloc` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs","byte_start":44522,"byte_end":44528,"line_start":1238,"line_end":1238,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"            let storage = libc::malloc(size) as *mut raw::bpf_insn;","highlight_start":33,"highlight_end":39}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `malloc` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lsh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pcap-0.8.1/src/lib.rs:1238:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let storage = libc::malloc(size) as *mut raw::bpf_insn;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 13 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 13 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0412, E0422, E0425, E0432, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0412, E0422, E0425, E0432, E0433.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0412`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0412`.\u001b[0m\n"}
